{
  "/api/administrator/account": {
    "url": "/api/administrator/account",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "unspecified querystring accountid",
        "invalid querystring accountid"
      ]
    },
    "redacts": [
      "usernameHash",
      "passwordHash",
      "sessionKey"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/accounts-count": {
    "url": "/api/administrator/accounts-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/accounts": {
    "url": "/api/administrator/accounts",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [
      "usernameHash",
      "passwordHash",
      "sessionKey"
    ],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/administrator-accounts-count": {
    "url": "/api/administrator/administrator-accounts-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/administrator-accounts": {
    "url": "/api/administrator/administrator-accounts",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [
      "usernameHash",
      "passwordHash",
      "sessionKey"
    ],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/create-reset-code": {
    "url": "/api/administrator/create-reset-code",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "unspecified querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-secret-code": [
        "missing posted secret-code"
      ],
      "invalid-secret-code-length": [
        "invalid posted secret-code length"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment MINIMUM_RESET_CODE_LENGTH",
      "environment MAXIMUM_RESET_CODE_LENGTH"
    ]
  },
  "/api/administrator/delete-account": {
    "url": "/api/administrator/delete-account",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "receieves": [
        "querystring accountid"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/administrator/deleted-accounts-count": {
    "url": "/api/administrator/deleted-accounts-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "querystring accountid"
    ],
    "configuration": []
  },
  "/api/administrator/deleted-accounts": {
    "url": "/api/administrator/deleted-accounts",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [
      "usernameHash",
      "passwordHash",
      "sessionKey"
    ],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/profile": {
    "url": "/api/administrator/profile",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-profileid": [
        "missing querystring profileid",
        "invalid querystring profileid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/profiles-count": {
    "url": "/api/administrator/profiles-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/profiles": {
    "url": "/api/administrator/profiles",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring accountid (string)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/reset-account-administrator": {
    "url": "/api/administrator/reset-account-administrator",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "accessing account is not owner",
        "querystring accountid is not administrator"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/reset-code": {
    "url": "/api/administrator/reset-code",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-reset-codeid": [
        "missing querystring codeid",
        "invalid querystring codeid"
      ]
    },
    "redacts": [
      "secretCodeHash"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/reset-codes-count": {
    "url": "/api/administrator/reset-codes-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/reset-codes": {
    "url": "/api/administrator/reset-codes",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring accountid (string)"
    ],
    "exceptions": {},
    "redacts": [
      "secretCodeHash"
    ],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/reset-session-key": {
    "url": "/api/administrator/reset-session-key",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible querystring account is deleted"
      ],
      "requires": [
        "querystring accountid is not deleted"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/session": {
    "url": "/api/administrator/session",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-sessionid": [
        "unspecified querystring accountid",
        "invalid querystring sessionid"
      ]
    },
    "redacts": [
      "tokenHash"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/sessions-count": {
    "url": "/api/administrator/sessions-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/sessions": {
    "url": "/api/administrator/sessions",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring accountid (string)"
    ],
    "exceptions": {},
    "redacts": [
      "tokenHash"
    ],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/set-account-administrator": {
    "url": "/api/administrator/set-account-administrator",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "unspecified querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible querystring account is already administrator"
      ],
      "requires": [
        "querystring accountid is not administrator"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/set-account-deleted": {
    "url": "/api/administrator/set-account-deleted",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "unspecified querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible querystring account is already deleted",
        "querystring accountid is deleted"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment DELETE_DELAY"
    ]
  },
  "/api/administrator/set-owner-account": {
    "url": "/api/administrator/set-owner-account",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account",
        "ineligible querystring account is already owner"
      ],
      "requires": [
        "accessing account is owner",
        "querystring account is not owner",
        "querystring account is not deleted"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/account": {
    "url": "/api/user/account",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [
      "usernameHash",
      "passwordHash",
      "sessionKey"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/create-account": {
    "url": "/api/user/create-account",
    "verb": "post",
    "auth": false,
    "receives": [
      "optionally-required posted first-name",
      "optionally-required posted last-name",
      "optionally-required posted display-name",
      "optionally-required posted company-name",
      "optionally-required posted contact-email",
      "optionally-required posted display-email",
      "optionally-required posted location",
      "optionally-required posted occupation",
      "optionally-required posted phone",
      "optionally-required posted dob"
    ],
    "exceptions": {
      "invalid-username": [
        "missing posted username"
      ],
      "invalid-username-length": [
        "posted username too short",
        "posted username too long"
      ],
      "invalid-password": [
        "missing posted password"
      ],
      "invalid-password-length": [
        "posted password too short",
        "posted password too long"
      ],
      "invalid-first-name": [
        "missing posted first-name"
      ],
      "invalid-first-name-length": [
        "posted first-name too short",
        "posted first-name too long"
      ],
      "invalid-last-name": [
        "missing posted last-name"
      ],
      "invalid-last-name-length": [
        "posted last-name too short",
        "posted last-name too long"
      ],
      "invalid-display-name": [
        "missing posted display-name"
      ],
      "invalid-display-name-length": [
        "posted display-name too short",
        "posted display-name too long"
      ],
      "invalid-company-name": [
        "missing posted company-name"
      ],
      "invalid-contact-email": [
        "missing posted contact-email"
      ],
      "invalid-display-email": [
        "missing posted display-email"
      ],
      "invalid-location": [
        "missing posted location"
      ],
      "invalid-occupation": [
        "missing posted occupation"
      ],
      "invalid-phone": [
        "missing posted phone"
      ],
      "invalid-dob": [
        "missing posted dob"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment MINIMUM_USERNAME_LENGTH",
      "environment MAXIMUM_USERNAME_LENGTH",
      "environment MINIMUM_PASSWORD_LENGTH",
      "environment MAXIMUM_PASSWORD_LENGTH",
      "environment REQUIRE_PROFILE",
      "environment USER_PROFILE_FIELDS",
      "environment MINIMUM_PROFILE_FIRST_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_FIRST_NAME_LENGTH",
      "environment MINIMUM_PROFILE_LAST_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_LAST_NAME_LENGTH",
      "environment MINIMUM_PROFILE_DISPLAY_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_DISPLAY_NAME_LENGTH",
      "environment MINIMUM_PROFILE_COMPANY_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_COMPANY_NAME_LENGTH",
      "override req.userProfileFields"
    ]
  },
  "/api/user/create-profile": {
    "url": "/api/user/create-profile",
    "verb": "post",
    "auth": false,
    "receives": [
      "optionally-required posted first-name",
      "optionally-required posted last-name",
      "optionally-required posted display-name",
      "optionally-required posted company-name",
      "optionally-required posted contact-email",
      "optionally-required posted display-email",
      "optionally-required posted location",
      "optionally-required posted occupation",
      "optionally-required posted phone",
      "optionally-required posted dob"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid",
        "ineligible accessing account"
      ],
      "invalid-first-name": [
        "missing posted first-name"
      ],
      "invalid-first-name-length": [
        "posted first-name too short",
        "posted first-name too long"
      ],
      "invalid-last-name": [
        "missing posted last-name"
      ],
      "invalid-last-name-length": [
        "posted last-name too short",
        "posted last-name too long"
      ],
      "invalid-display-name": [
        "missing posted display-name"
      ],
      "invalid-display-name-length": [
        "posted display-name too short",
        "posted display-name too long"
      ],
      "invalid-company-name-length": [
        "posted company-name too short",
        "posted company-name too long"
      ],
      "invalid-contact-email": [
        "missing posted contact-email"
      ],
      "invalid-display-email": [
        "missing posted display-email"
      ],
      "invalid-location": [
        "missing posted location"
      ],
      "invalid-occupation": [
        "missing posted occupation"
      ],
      "invalid-phone": [
        "missing posted phone"
      ],
      "invalid-dob": [
        "missing posted dob"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment USER_PROFILE_FIELDS",
      "environment MINIMUM_PROFILE_FIRST_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_FIRST_NAME_LENGTH",
      "environment MINIMUM_PROFILE_LAST_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_LAST_NAME_LENGTH",
      "environment MINIMUM_PROFILE_DISPLAY_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_DISPLAY_NAME_LENGTH",
      "environment MINIMUM_PROFILE_COMPANY_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_COMPANY_NAME_LENGTH",
      "override req.userProfileFields"
    ]
  },
  "/api/user/create-reset-code": {
    "url": "/api/user/create-reset-code",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid",
        "ineligible accessing account"
      ],
      "invalid-secret-code": [
        "missing posted secret-code"
      ],
      "invalid-secret-code-length": [
        "posted secret code too short",
        "posted secret code too long"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/create-session": {
    "url": "/api/user/create-session",
    "verb": "post",
    "auth": false,
    "receives": [
      "optional posted remember (hours|days)"
    ],
    "exceptions": {
      "invalid-username": [
        "missing posted username"
      ],
      "invalid-password": [
        "missing posted password"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/delete-profile": {
    "url": "/api/user/delete-profile",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-profileid": [
        "missing querystring profileid",
        "invalid querystring profileid"
      ],
      "invalid-profile": [
        "querystring profileid is default contact profile"
      ],
      "invalid-account": [
        "ineligible querystring profileid"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/delete-reset-code": {
    "url": "/api/user/delete-reset-code",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-reset-codeid": [
        "missing querystring codeid",
        "invalid querystring codeid"
      ],
      "invalid-account": [
        "ineligible querystring codeid"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/profile": {
    "url": "/api/user/profile",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-profileid": [
        "missing querystring profileid",
        "invalid querystring profileid"
      ],
      "invalid-account": [
        "ineligible querystring profileid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/profiles-count": {
    "url": "/api/user/profiles-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/profiles": {
    "url": "/api/user/profiles",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/reset-account-deleted": {
    "url": "/api/user/reset-account-deleted",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-username": [
        "missing posted username",
        "invalid posted username"
      ],
      "invalid-password": [
        "missing posted password",
        "invalid posted password"
      ],
      "invalid-account": [
        "credentialed account is not scheduled for deletion"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/reset-account-password": {
    "url": "/api/user/reset-account-password",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-username": [
        "missing posted username",
        "invalid posted username"
      ],
      "invalid-password": [
        "missing posted new-password"
      ],
      "invalid-secret-code": [
        "missing posted secret-code"
      ],
      "invalid-reset-code": [
        "invalid posted secret-code"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/reset-code": {
    "url": "/api/user/reset-code",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-reset-codeid": [
        "missing querystring codeid",
        "invalid querystring codeid"
      ],
      "invalid-account": [
        "ineligible querystring codeid"
      ]
    },
    "redacts": [
      "secretCodeHash"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/reset-codes-count": {
    "url": "/api/user/reset-codes-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/reset-codes": {
    "url": "/api/user/reset-codes",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [
      "secretCodeHash"
    ],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/reset-session-key": {
    "url": "/api/user/reset-session-key",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/session": {
    "url": "/api/user/session",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-sessionid": [
        "missing querystring sessionid",
        "invalid querystring sessionid"
      ],
      "invalid-account": [
        "ineligible querystring sessionid"
      ]
    },
    "redacts": [
      "tokenHash"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/sessions-count": {
    "url": "/api/user/sessions-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/sessions": {
    "url": "/api/user/sessions",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/set-account-deleted": {
    "url": "/api/user/set-account-deleted",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-password": [
        "missing posted password",
        "invalid posted password"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment DELETE_DELAY"
    ]
  },
  "/api/user/set-account-password": {
    "url": "/api/user/set-account-password",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-password": [
        "missing posted password",
        "invalid posted password"
      ],
      "invalid-new-password": [
        "missing posted new-password"
      ],
      "invalid-new-password-length": [
        "posted new-password too short",
        "posted new-password too long"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/set-account-profile": {
    "url": "/api/user/set-account-profile",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-profileid": [
        "missing posted profileid",
        "invalid posted profileid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/set-account-username": {
    "url": "/api/user/set-account-username",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-password": [
        "missing posted password",
        "invalid posted password"
      ],
      "invalid-new-username": [
        "missing posted new-username"
      ],
      "invalid-new-username-length": [
        "posted new-username too short",
        "posted new-username too long"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/set-session-ended": {
    "url": "/api/user/set-session-ended",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-sessionid": [
        "missing querystring sessionid",
        "invalid querystring sessionid"
      ],
      "invalid-session": [
        "querystring sessionid is already ended"
      ],
      "invalid-account": [
        "ineligible querystring sessionid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/set-session-verified": {
    "url": "/api/user/set-session-verified",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-sessionid": [
        "missing querystring sessionid",
        "invalid querystring sessionid"
      ],
      "invalid-account": [
        "ineligible querystring sessionid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/update-profile": {
    "url": "/api/user/update-profile",
    "verb": "patch",
    "auth": false,
    "receives": [
      "optionally-required posted first-name",
      "optionally-required posted last-name",
      "optionally-required posted display-name",
      "optionally-required posted company-name",
      "optionally-required posted contact-email",
      "optionally-required posted display-email",
      "optionally-required posted location",
      "optionally-required posted occupation",
      "optionally-required posted phone",
      "optionally-required posted dob"
    ],
    "exceptions": {
      "invalid-profileid": [
        "missing querystring profileid",
        "invalid querystring profileid",
        "ineligible querystring profileid"
      ],
      "invalid-first-name": [
        "missing posted first-name"
      ],
      "invalid-first-name-length": [
        "posted first-name too short",
        "posted first-name too long"
      ],
      "invalid-last-name": [
        "missing posted last-name"
      ],
      "invalid-last-name-length": [
        "posted last-name too short",
        "posted last-name too long"
      ],
      "invalid-display-name": [
        "missing posted display-name"
      ],
      "invalid-display-name-length": [
        "posted display-name too short",
        "posted display-name too long"
      ],
      "invalid-company-name": [
        "missing posted company-name"
      ],
      "invalid-company-name-length": [
        "posted company-name too short",
        "posted company-name too long"
      ],
      "invalid-contact-email": [
        "missing posted contact-email"
      ],
      "invalid-display-email": [
        "missing posted display-email"
      ],
      "invalid-location": [
        "missing posted location"
      ],
      "invalid-occupation": [
        "missing posted occupation"
      ],
      "invalid-phone": [
        "missing posted phone"
      ],
      "invalid-dob": [
        "missing posted dob"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment USER_PROFILE_FIELDS",
      "environment MINIMUM_PROFILE_FIRST_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_FIRST_NAME_LENGTH",
      "environment MINIMUM_PROFILE_LAST_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_LAST_NAME_LENGTH",
      "environment MINIMUM_PROFILE_DISPLAY_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_DISPLAY_NAME_LENGTH",
      "environment MINIMUM_PROFILE_COMPANY_NAME_LENGTH",
      "environment MAXIMUM_PROFILE_COMPANY_NAME_LENGTH",
      "override req.userProfileFields"
    ]
  },
  "/api/user/geoip/country": {
    "url": "/api/user/geoip/country",
    "verb": "get",
    "auth": false,
    "receives": [
      "required querystring ip"
    ],
    "exceptions": {
      "invalid-ip": [
        "missing querystring ip",
        "invalid querystring ip"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/organizations/invitation": {
    "url": "/api/administrator/organizations/invitation",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invitationid": [
        "missing querystring invitationid",
        "invalid querystring invitationid"
      ]
    },
    "redacts": [
      "secretCodeHash"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/organizations/invitations-count": {
    "url": "/api/administrator/organizations/invitations-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/organizations/invitations": {
    "url": "/api/administrator/organizations/invitations",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring accountid (string)",
      "optional querystring organizationid (string)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/organizations/membership": {
    "url": "/api/administrator/organizations/membership",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-membershipid": [
        "missing querystring membershipid",
        "invalid querystring membershipid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/organizations/memberships-count": {
    "url": "/api/administrator/organizations/memberships-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/organizations/memberships": {
    "url": "/api/administrator/organizations/memberships",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring accountid (string)",
      "optional querystring organizationid (string)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/organizations/organization": {
    "url": "/api/administrator/organizations/organization",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-organizationid": [
        "unspecified querystring organizationid",
        "invalid querystring organizationid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/organizations/organizations-count": {
    "url": "/api/administrator/organizations/organizations-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/organizations/organizations": {
    "url": "/api/administrator/organizations/organizations",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring accountid (string)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/organizations/create-invitation": {
    "url": "/api/user/organizations/create-invitation",
    "verb": "post",
    "auth": false,
    "receives": [
      "required posted secret-code"
    ],
    "exceptions": {
      "invalid-organizationid": [
        "missing querystring organizationid",
        "invalid querystring organizationid"
      ],
      "invalid-secret-code": [
        "missing posted secret-code"
      ],
      "invalid-secret-code-length": [
        "posted secret-code too short",
        "posted secret-code too long"
      ],
      "invalid-account": [
        "accessing account is not organization owner"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/create-membership": {
    "url": "/api/user/organizations/create-membership",
    "verb": "post",
    "auth": false,
    "receives": [
      "required posted secret-code",
      "required posted profileid"
    ],
    "exceptions": {
      "invalid-invitationid": [
        "missing querystring invitationid",
        "invalid querystring invitationid"
      ],
      "invalid-invitation": [
        "querystring invitationid has been used",
        "posted secret-code has been used",
        "querystring invitationid is not open invitation"
      ],
      "invalid-secret-code": [
        "missing posted secret-code",
        "invalid posted secret-code"
      ],
      "invalid-account": [
        "accessing account is organization owner",
        "accessing account is organization member"
      ],
      "invalid-profileid": [
        "missing posted profileid",
        "invalid posted profileid"
      ],
      "invalid-profile": [
        "ineligible posted profileid is missing fields"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/create-organization": {
    "url": "/api/user/organizations/create-organization",
    "verb": "post",
    "auth": false,
    "receives": [
      "required posted organization-email",
      "required posted organization-name",
      "required posted profileid"
    ],
    "exceptions": {
      "invalid-organization-name": [
        "missing posted name"
      ],
      "invalid-organization-name-length": [
        "posted name too short",
        "posted name too long"
      ],
      "invalid-organization-email": [
        "missing posted email",
        "invalid posted email"
      ],
      "invalid-profile": [
        "missing posted profileid",
        "invalid posted profileid",
        "ineligible posted profileid missing fields"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/delete-invitation": {
    "url": "/api/user/organizations/delete-invitation",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invitationid": [
        "missing querystring invitationid",
        "invalid querystring invitationid"
      ],
      "invalid-invitation": [
        "querystring invitationid is used invitation"
      ],
      "invalid-account": [
        "accessing account is not organization owner"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/organizations/delete-membership": {
    "url": "/api/user/organizations/delete-membership",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-membershipid": [
        "missing querystring membershipid",
        "invalid querystring membershipid"
      ],
      "invalid-account": [
        "accessing account is not membership or organization owner"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/organizations/delete-organization": {
    "url": "/api/user/organizations/delete-organization",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-organizationid": [
        "missing querystring organizationid",
        "invalid querystring organizationid"
      ],
      "invalid-account": [
        "accessing account does not own organization"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/organizations/invitation": {
    "url": "/api/user/organizations/invitation",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invitationid": [
        "missing querystring invitationid",
        "invalid querystring invitationid"
      ],
      "invalid-account": [
        "accessing account is not organization owner"
      ]
    },
    "redacts": [
      "secretCodeHash"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/invitations-count": {
    "url": "/api/user/organizations/invitations-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/organizations/invitations": {
    "url": "/api/user/organizations/invitations",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring organizationid (string)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/organizations/membership": {
    "url": "/api/user/organizations/membership",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-membershipid": [
        "missing querystring membershipid",
        "invalid querystring membershipid"
      ],
      "invalid-account": [
        "accessing account must be organization member or owner"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/memberships-count": {
    "url": "/api/user/organizations/memberships-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/organizations/memberships": {
    "url": "/api/user/organizations/memberships",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring organizationid (string)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/organizations/open-invitation-organization": {
    "url": "/api/user/organizations/open-invitation-organization",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invitationid": [
        "missing querystring invitationid",
        "invalid querystring invitationid"
      ],
      "invalid-invitation": [
        "querystring invitationid is used"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/open-invitation": {
    "url": "/api/user/organizations/open-invitation",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invitationid": [
        "missing querystring invitationid",
        "invalid querystring invitationid"
      ],
      "invalid-invitation": [
        "querystring invitationid is used"
      ]
    },
    "redacts": [
      "secretCodeHash"
    ],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/organization-membership": {
    "url": "/api/user/organizations/organization-membership",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-organizationid": [
        "missing querystring organizationid",
        "invalid querystring organizationid"
      ],
      "invalid-account": [
        "accessing account must be organization member"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/organization": {
    "url": "/api/user/organizations/organization",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-organizationid": [
        "missing querystring organizationid",
        "invalid querystring organizationid"
      ],
      "invalid-account": [
        "accessing account must be organization member"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/organizations-count": {
    "url": "/api/user/organizations/organizations-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/organizations/organizations": {
    "url": "/api/user/organizations/organizations",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/organizations/set-organization-owner": {
    "url": "/api/user/organizations/set-organization-owner",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-organizationid": [
        "missing querystring organizationid",
        "invalid querystring organizationid"
      ],
      "invalid-accountid": [
        "posted accountid is missing",
        "posted accountid is invalid"
      ],
      "invalid-account": [
        "accessing account is not organization owner",
        "posted accountid is organization owner",
        "posted accountid is not member"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/organizations/update-organization": {
    "url": "/api/user/organizations/update-organization",
    "verb": "patch",
    "auth": false,
    "receives": [
      "required posted name",
      "required posted email"
    ],
    "exceptions": {
      "invalid-organizationid": [
        "missing querystring organizationid",
        "invalid querystring organizationid"
      ],
      "invalid-account": [
        "accessing account is not organization owner"
      ],
      "invalid-organization-name": [
        "missing posted name"
      ],
      "invalid-organization-name-length": [
        "posted name is too short",
        "posted name is too long"
      ],
      "invalid-organization-email": [
        "missing posted email",
        "invalid posted email"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/charge": {
    "url": "/api/administrator/subscriptions/charge",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-chargeid": [
        "missing querystring chargeid",
        "invalid querystring chargeid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/charges-count": {
    "url": "/api/administrator/subscriptions/charges-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/charges": {
    "url": "/api/administrator/subscriptions/charges",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/coupon": {
    "url": "/api/administrator/subscriptions/coupon",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-couponid": [
        "missing querystring couponid",
        "invalid querystring couponid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/coupons-count": {
    "url": "/api/administrator/subscriptions/coupons-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/coupons": {
    "url": "/api/administrator/subscriptions/coupons",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/create-cancelation-refund": {
    "url": "/api/administrator/subscriptions/create-cancelation-refund",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription is not active"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/create-coupon": {
    "url": "/api/administrator/subscriptions/create-coupon",
    "verb": "post",
    "auth": false,
    "receives": [
      "required posted duration",
      "optionally-required posted amount_off (integer, or percent_off)",
      "optionally-required posted currency (string, if amount_off)",
      "optionally-required posted percent_off (integer, or amount_off)",
      "optionally-required posted expire date",
      "optionally-required posted duration_in_months"
    ],
    "exceptions": {
      "invalid-couponid": [
        "missing posted couponid",
        "invalid posted couponid is not alphanumeric_"
      ],
      "invalid-amount_off": [
        "missing posted amount_off",
        "invalid posted amount_off"
      ],
      "invalid-currency": [
        "missing posted currency",
        "invalid posted currency"
      ],
      "invalid-percent_off": [
        "invalid posted percent_off"
      ],
      "invalid-duration": [
        "invalid posted duration"
      ],
      "invalid-duration_in_months": [
        "missing posted duration_in_months",
        "invalid posted duration_in_months"
      ],
      "invalid-redeem_by_meridiem": [
        "invalid posted redeem_by_meridiem"
      ],
      "invalid-redeem_by": [
        "invalid posted redeem_by"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/create-plan": {
    "url": "/api/administrator/subscriptions/create-plan",
    "verb": "post",
    "auth": false,
    "receives": [
      "optional posted published (boolean)",
      "optional posted trial_period_days (integer)",
      "optional posted usage_type (licensed|metered)"
    ],
    "exceptions": {
      "invalid-planid": [
        "invalid posted planid is not alphanumeric_"
      ],
      "invalid-planid-length": [
        "posted planid is too short",
        "posted planid is too long"
      ],
      "invalid-productid": [
        "missing posted productid",
        "invalid posted productid"
      ],
      "invalid-product": [
        "ineligible posted product is not published"
      ],
      "invalid-amount": [
        "missing posted amount",
        "invalid posted amount"
      ],
      "invalid-currency": [
        "missing posted currency",
        "invalid posted currency"
      ],
      "invalid-interval": [
        "missing posted interval",
        "invalid posted interval"
      ],
      "invalid-interval-count": [
        "missing posted interval_count",
        "invalid posted interval_count"
      ],
      "invalid-trial_period": [
        "invalid posted trial_period"
      ],
      "invalid-usage_type": [
        "invalid posted usage_type"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment MINIMUM_PLANID_LENGTH",
      "environment MAXIMUM_PLANID_LENGTH"
    ]
  },
  "/api/administrator/subscriptions/create-product": {
    "url": "/api/administrator/subscriptions/create-product",
    "verb": "post",
    "auth": false,
    "receives": [
      "optional posted published (boolean)"
    ],
    "exceptions": {
      "invalid-name": [
        "missing posted name"
      ],
      "invalid-product-name-length": [
        "posted name too short",
        "posted name too long"
      ],
      "invalid-statement_descriptor": [
        "missing posted statement_descriptor"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment MINIMUM_PRODUCT_NAME_LENGTH",
      "environment MAXIMUM_PRODUCT_NAME_LENGTH"
    ]
  },
  "/api/administrator/subscriptions/create-refund": {
    "url": "/api/administrator/subscriptions/create-refund",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-chargeid": [
        "missing querystring chargeid",
        "invalid querystring chargeid"
      ],
      "invalid-amount": [
        "missing posted amount",
        "invalid posted amount",
        "invalid posted amount is negative",
        "invalid posted amount exceeds charge"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/customer": {
    "url": "/api/administrator/subscriptions/customer",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/customers-count": {
    "url": "/api/administrator/subscriptions/customers-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/customers": {
    "url": "/api/administrator/subscriptions/customers",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/delete-coupon": {
    "url": "/api/administrator/subscriptions/delete-coupon",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-couponid": [
        "missing querystring couponid",
        "invalid querystring couponid"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/delete-plan": {
    "url": "/api/administrator/subscriptions/delete-plan",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-planid": [
        "missing querystring planid",
        "invalid querystring planid"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/delete-product": {
    "url": "/api/administrator/subscriptions/delete-product",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-productid": [
        "missing querystring productid",
        "invalid querystring productid"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/delete-subscription": {
    "url": "/api/administrator/subscriptions/delete-subscription",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription is not active"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/invoice": {
    "url": "/api/administrator/subscriptions/invoice",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invoiceid": [
        "missing querystring invoiceid",
        "invalid querystring invoiceid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/invoices-count": {
    "url": "/api/administrator/subscriptions/invoices-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/invoices": {
    "url": "/api/administrator/subscriptions/invoices",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/payment-intent": {
    "url": "/api/administrator/subscriptions/payment-intent",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-paymentintentid": [
        "missing querystring paymentintentid",
        "invalid querystring paymentintentid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/payment-intents-count": {
    "url": "/api/administrator/subscriptions/payment-intents-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/payment-intents": {
    "url": "/api/administrator/subscriptions/payment-intents",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/payment-method": {
    "url": "/api/administrator/subscriptions/payment-method",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-paymentmethodid": [
        "missing querystring paymentmethodid",
        "invalid querystring paymentmethodid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/payment-methods-count": {
    "url": "/api/administrator/subscriptions/payment-methods-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/payment-methods": {
    "url": "/api/administrator/subscriptions/payment-methods",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/plan": {
    "url": "/api/administrator/subscriptions/plan",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-planid": [
        "missing querystring planid",
        "invalid querystring planid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/plans-count": {
    "url": "/api/administrator/subscriptions/plans-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/plans": {
    "url": "/api/administrator/subscriptions/plans",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/product": {
    "url": "/api/administrator/subscriptions/product",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-productid": [
        "missing querystring productid",
        "invalid querystring productid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/products-count": {
    "url": "/api/administrator/subscriptions/products-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/products": {
    "url": "/api/administrator/subscriptions/products",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/refund-requests-count": {
    "url": "/api/administrator/subscriptions/refund-requests-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/refund-requests": {
    "url": "/api/administrator/subscriptions/refund-requests",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/refund": {
    "url": "/api/administrator/subscriptions/refund",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "undefined": [
        "invalid querystring refundid",
        "missing querystring refundid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/refunds-count": {
    "url": "/api/administrator/subscriptions/refunds-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/refunds": {
    "url": "/api/administrator/subscriptions/refunds",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/reset-customer-coupon": {
    "url": "/api/administrator/subscriptions/reset-customer-coupon",
    "verb": "patch",
    "auth": false,
    "receives": [
      "object"
    ],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-customer": [
        "invalid querystring customer has no discount"
      ]
    },
    "redacts": [],
    "returns": [],
    "configuration": []
  },
  "/api/administrator/subscriptions/reset-subscription-coupon": {
    "url": "/api/administrator/subscriptions/reset-subscription-coupon",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription has no discount"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-charge-flagged": {
    "url": "/api/administrator/subscriptions/set-charge-flagged",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-chargeid": [
        "missing querystring charge",
        "invalid querystring charge"
      ],
      "invalid-charge": [
        "ineligible querystring charge is already flagged"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-coupon-published": {
    "url": "/api/administrator/subscriptions/set-coupon-published",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-couponid": [
        "missing querystring couponid",
        "invalid querystring couponid"
      ],
      "invalid-coupon": [
        "ineligible querystring coupon is published",
        "ineligible querystring coupon is unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-coupon-unpublished": {
    "url": "/api/administrator/subscriptions/set-coupon-unpublished",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-couponid": [
        "missing querystring couponid",
        "invalid querystring couponid"
      ],
      "invalid-coupon": [
        "ineligible querystring coupon is not published",
        "ineligible querystring coupon is already unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-customer-coupon": {
    "url": "/api/administrator/subscriptions/set-customer-coupon",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-customer": [
        "ineligible customer has coupon"
      ],
      "invalid-couponid": [
        "missing posted couponid",
        "invalid posted couponid"
      ],
      "invalid-coupon": [
        "ineligible posted coupon is not published",
        "ineligible posted coupon is unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-plan-published": {
    "url": "/api/administrator/subscriptions/set-plan-published",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-planid": [
        "missing querystring planid",
        "invalid querystring planid"
      ],
      "invalid-plan": [
        "ineligible querystring plan is published"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-plan-unpublished": {
    "url": "/api/administrator/subscriptions/set-plan-unpublished",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-planid": [
        "missing querystring planid",
        "invalid querystring planid"
      ],
      "invalid-plan": [
        "ineligible querystring plan is not published",
        "ineligible querystring plan is already unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-product-published": {
    "url": "/api/administrator/subscriptions/set-product-published",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-productid": [
        "missing querystring productid",
        "invalid querystring productid"
      ],
      "invalid-product": [
        "invalid querystring product is already published"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-product-unpublished": {
    "url": "/api/administrator/subscriptions/set-product-unpublished",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-productid": [
        "missing querystring productid",
        "invalid querystring productid"
      ],
      "invalid-product": [
        "ineligible querystring product is not published",
        "ineligible querystring product is already unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-refund-request-denied": {
    "url": "/api/administrator/subscriptions/set-refund-request-denied",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-chargeid": [
        "missing querystring chargeid",
        "invalid querystring chargeid"
      ],
      "invalid-charge": [
        "ineligible querystring charge has no refund request",
        "ineligible querystring charge has denied request already"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-subscription-canceled": {
    "url": "/api/administrator/subscriptions/set-subscription-canceled",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription is not active"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/set-subscription-coupon": {
    "url": "/api/administrator/subscriptions/set-subscription-coupon",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "ineligible subscription is canceling",
        "ineligible subscription has coupon"
      ],
      "invalid-couponid": [
        "missing posted couponid",
        "invalid posted couponid"
      ],
      "invalid-coupon": [
        "ineligible posted coupon is not published",
        "ineligible posted coupon is unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/setup-intent": {
    "url": "/api/administrator/subscriptions/setup-intent",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-setupintentid": [
        "missing querystring setupintentid",
        "invalid querystring setupintentid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/setup-intents-count": {
    "url": "/api/administrator/subscriptions/setup-intents-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/setup-intents": {
    "url": "/api/administrator/subscriptions/setup-intents",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/subscription": {
    "url": "/api/administrator/subscriptions/subscription",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/subscriptions-count": {
    "url": "/api/administrator/subscriptions/subscriptions-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/subscriptions": {
    "url": "/api/administrator/subscriptions/subscriptions",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/administrator/subscriptions/update-coupon": {
    "url": "/api/administrator/subscriptions/update-coupon",
    "verb": "patch",
    "auth": false,
    "receives": [
      "required posted name"
    ],
    "exceptions": {
      "invalid-couponid": [
        "missing querystring couponid",
        "invalid querystring couponid"
      ],
      "invalid-coupon": [
        "ineligible querystring coupon is unpublished"
      ],
      "invalid-name": [
        "missing posted name",
        "invalid posted name"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/update-plan": {
    "url": "/api/administrator/subscriptions/update-plan",
    "verb": "patch",
    "auth": false,
    "receives": [
      "optional posted trial_period_days (integer)"
    ],
    "exceptions": {
      "invalid-planid": [
        "missing querystring planid",
        "invalid querystring planid"
      ],
      "invalid-plan": [
        "ineligible querystring plan is unpublished"
      ],
      "invalid-productid": [
        "invalid posted productid"
      ],
      "invalid-product": [
        "ineligible posted product is not published",
        "ineligible posted product is unpublished"
      ],
      "invalid-trial_period_days": [
        "invalid posted trial_period_days",
        "ineligible posted trial_period_days is negative",
        "ineligible posted trial_period_days greater than 365"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/update-product": {
    "url": "/api/administrator/subscriptions/update-product",
    "verb": "patch",
    "auth": false,
    "receives": [
      "optional posted name",
      "optional posted statement_descriptor",
      "optional posted unit_label"
    ],
    "exceptions": {
      "invalid-productid": [
        "missing querystring productid",
        "invalid querystring productid"
      ],
      "invalid-product": [
        "ineligible querystring product is unpublished"
      ],
      "invalid-name": [
        "invalid posted name"
      ],
      "invalid-name-length": [
        "posted name too short",
        "posted name too long"
      ],
      "invalid-statement_descriptor": [
        "invalid posted statement_descriptor"
      ],
      "invalid-statement_descriptor-length": [
        "posted statement_descriptor too short",
        "posted statement_descriptor too long"
      ],
      "invalid-unit_label": [
        "missing posted unit_label"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment MINIMUM_PRODUCT_NAME_LENGTH",
      "environment MAXIMUM_PRODUCT_NAME_LENGTH"
    ]
  },
  "/api/administrator/subscriptions/usage-record": {
    "url": "/api/administrator/subscriptions/usage-record",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-usagerecordid": [
        "missing querystring usagerecordid",
        "invalid querystring usagerecordid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/usage-records-count": {
    "url": "/api/administrator/subscriptions/usage-records-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/administrator/subscriptions/usage-records": {
    "url": "/api/administrator/subscriptions/usage-records",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)",
      "optional querystring accountid",
      "optional querystring customerid",
      "optional querystring subscriptionid"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/charge": {
    "url": "/api/user/subscriptions/charge",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-chargeid": [
        "missing querystring chargeid",
        "invalid querystring chargeid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/charges-count": {
    "url": "/api/user/subscriptions/charges-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/charges": {
    "url": "/api/user/subscriptions/charges",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/create-cancelation-refund": {
    "url": "/api/user/subscriptions/create-cancelation-refund",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription is not active",
        "ineligible querystring subscription is free"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/create-customer": {
    "url": "/api/user/subscriptions/create-customer",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/create-payment-intent": {
    "url": "/api/user/subscriptions/create-payment-intent",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-account": [
        "ineligible accessing account",
        "ineligible posted payment method"
      ],
      "invalid-paymentmethodid": [
        "missing posted paymentmethodid",
        "invalid posted paymentmethodid"
      ],
      "object": []
    },
    "redacts": [],
    "returns": [],
    "configuration": []
  },
  "/api/user/subscriptions/create-payment-method": {
    "url": "/api/user/subscriptions/create-payment-method",
    "verb": "post",
    "auth": false,
    "receives": [
      "optionally-required posted name",
      "optionally-required posted cvc",
      "optionally-required posted number",
      "optionally-required posted exp_month",
      "optionally-required posted exp_year",
      "optionally-required posted token"
    ],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment STRIPE_JS"
    ]
  },
  "/api/user/subscriptions/create-refund-request": {
    "url": "/api/user/subscriptions/create-refund-request",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-chargeid": [
        "missing querystring chargeid",
        "invalid querystring chargeid"
      ],
      "invalid-charge": [
        "ineligible querystring charge is refunded",
        "ineligible querystring charge has refund request"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/create-refund": {
    "url": "/api/user/subscriptions/create-refund",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-chargeid": [
        "missing querystring chargeid",
        "invalid querystring chargeid"
      ],
      "invalid-charge": [
        "ineligible querystring charge is refunded",
        "ineligible querystring charge is out of refund period"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": [
      "environment SUBSCRIPTION_REFUND_PERIOD"
    ]
  },
  "/api/user/subscriptions/create-setup-intent": {
    "url": "/api/user/subscriptions/create-setup-intent",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-paymentmethodid": [
        "missing posted paymentmethodid",
        "invalid posted paymentmethodid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/create-subscription": {
    "url": "/api/user/subscriptions/create-subscription",
    "verb": "post",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-customer": [
        "ineligible querystring customer requires payment method"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-planid": [
        "missing posted planid",
        "invalid posted planid"
      ],
      "invalid-plan": [
        "ineligible posted plan is not published",
        "ineligible posted plan is unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/create-usage-record": {
    "url": "/api/user/subscriptions/create-usage-record",
    "verb": "post",
    "auth": false,
    "receives": [
      "required posted quantity",
      "required posted action",
      "required posted subscriptionitemid"
    ],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "invalid querystring subscription is not \"metered\""
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-quantity": [
        "invalid posted quantity is not integer",
        "invalid posted quantity is negative"
      ],
      "invalid-action": [
        "missing posted action",
        "invalid posted action"
      ],
      "invalid-subscriptionitemid": [
        "missing posted subscriptionitemid",
        "invalid posted subscriptionitemid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/customer": {
    "url": "/api/user/subscriptions/customer",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/customers-count": {
    "url": "/api/user/subscriptions/customers-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/customers": {
    "url": "/api/user/subscriptions/customers",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/delete-customer": {
    "url": "/api/user/subscriptions/delete-customer",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/delete-subscription": {
    "url": "/api/user/subscriptions/delete-subscription",
    "verb": "delete",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription is not active"
      ]
    },
    "redacts": [],
    "returns": [
      "boolean"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/invoice": {
    "url": "/api/user/subscriptions/invoice",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invoiceid": [
        "missing querystring invoiceid",
        "invalid querystring invoiceid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/invoices-count": {
    "url": "/api/user/subscriptions/invoices-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/invoices": {
    "url": "/api/user/subscriptions/invoices",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/payment-intent": {
    "url": "/api/user/subscriptions/payment-intent",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-paymentintentid": [
        "missing querystring invalid",
        "invalid querystring invalid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/payment-intents-count": {
    "url": "/api/user/subscriptions/payment-intents-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/payment-intents": {
    "url": "/api/user/subscriptions/payment-intents",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/payment-method": {
    "url": "/api/user/subscriptions/payment-method",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-paymentmethodid": [
        "missing querystring paymentmethodid",
        "invalid querystring paymentmethodid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/payment-methods-count": {
    "url": "/api/user/subscriptions/payment-methods-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/payment-methods": {
    "url": "/api/user/subscriptions/payment-methods",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/published-coupon": {
    "url": "/api/user/subscriptions/published-coupon",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-couponid": [
        "missing querystring couponid",
        "invalid querystring couponid"
      ],
      "invalid-coupon": [
        "ineligible querystring coupon is not published"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/published-plan": {
    "url": "/api/user/subscriptions/published-plan",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-planid": [
        "missing querystring planid",
        "invalid querystring planid"
      ],
      "invalid-plan": [
        "ineligible querystring plan is not published"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/published-plans-count": {
    "url": "/api/user/subscriptions/published-plans-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/published-plans": {
    "url": "/api/user/subscriptions/published-plans",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/published-product": {
    "url": "/api/user/subscriptions/published-product",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-productid": [
        "missing querystring productid",
        "invalid querystring productid"
      ],
      "invalid-product": [
        "ineligible querystring product is not published"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/published-products-count": {
    "url": "/api/user/subscriptions/published-products-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/published-products": {
    "url": "/api/user/subscriptions/published-products",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/refund": {
    "url": "/api/user/subscriptions/refund",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-refundid": [
        "missing querystring refundid",
        "invalid querystring refundid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/refunds-count": {
    "url": "/api/user/subscriptions/refunds-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/refunds": {
    "url": "/api/user/subscriptions/refunds",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/reset-subscription-canceling": {
    "url": "/api/user/subscriptions/reset-subscription-canceling",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "invalid querystring subscription is active"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-customer-coupon": {
    "url": "/api/user/subscriptions/set-customer-coupon",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-customerid": [
        "missing querystring customerid",
        "invalid querystring customerid"
      ],
      "invalid-customer": [
        "invalid querystring customer has coupon"
      ],
      "invalid-account": [
        "ineligible account accessing"
      ],
      "invalid-couponid": [
        "missing posted couponid",
        "invalid posted couponid"
      ],
      "invalid-coupon": [
        "invalid posted coupon is not published",
        "invalid posted coupon is unpublished"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-invoice-paid": {
    "url": "/api/user/subscriptions/set-invoice-paid",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-invoiceid": [
        "missing querystring invoiceid",
        "invalid querystring invoiceid"
      ],
      "invalid-account": [
        "ineligible accessing account",
        "ineligible posted payment method"
      ],
      "invalid-invoice": [
        "invalid querystring invoice is paid",
        "invalid querystring invoice is marked uncollectable"
      ],
      "invalid-paymentmethodid": [
        "missing posted paymentmethodid",
        "invalid posted paymentmethodid"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-payment-intent-canceled": {
    "url": "/api/user/subscriptions/set-payment-intent-canceled",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-paymentintentid": [
        "missing querystring paymentintentid",
        "invalid querystring paymentintentid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-payment-method-detached": {
    "url": "/api/user/subscriptions/set-payment-method-detached",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-paymentmethodid": [
        "missing querystring paymentmethodid",
        "invalid querystring paymentmethodid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-paymentmethod": [
        "invalid querystring payment method is default"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-setup-intent-canceled": {
    "url": "/api/user/subscriptions/set-setup-intent-canceled",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-setupintentid": [
        "missing querystring setupintentid",
        "invalid querystring setupintentid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-subscription-canceled": {
    "url": "/api/user/subscriptions/set-subscription-canceled",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription is not active"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-subscription-coupon": {
    "url": "/api/user/subscriptions/set-subscription-coupon",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-subscription": [
        "invalid querystring subscription has coupon",
        "invalid querystring subscription is canceling"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-couponid": [
        "missing posted couponid",
        "invalid posted couponid"
      ],
      "invalid-coupon": [
        "invalid posted coupon is not published",
        "invalid posted coupon is unpublished",
        "invalid posted coupon is other currency"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-subscription-plan": {
    "url": "/api/user/subscriptions/set-subscription-plan",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-planid": [
        "missing posted planid",
        "invalid posted planid"
      ],
      "invalid-plan": [
        "invalid posted plan is not published",
        "invalid posted plan is unpublished",
        "invalid posted plan is unchanged"
      ],
      "invalid-paymentmethodid": [
        "invalid customer requires payments method"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/set-subscription-quantity": {
    "url": "/api/user/subscriptions/set-subscription-quantity",
    "verb": "patch",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-quantity": [
        "invalid posted quantity",
        "invalid posted quantity is unchanged",
        "invalid posted quantity is negative",
        "invalid posted quantity is zero"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/setup-intent": {
    "url": "/api/user/subscriptions/setup-intent",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-setupintentid": [
        "missing querystring setupintentid",
        "invalid querystring setupintentid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/setup-intents-count": {
    "url": "/api/user/subscriptions/setup-intents-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {},
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/setup-intents": {
    "url": "/api/user/subscriptions/setup-intents",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/subscription": {
    "url": "/api/user/subscriptions/subscription",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/subscriptions-count": {
    "url": "/api/user/subscriptions/subscriptions-count",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "integer"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/subscriptions": {
    "url": "/api/user/subscriptions/subscriptions",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring offset (integer)",
      "optional querystring limit (integer)",
      "optional querystring all (boolean)"
    ],
    "exceptions": {
      "invalid-accountid": [
        "missing querystring accountid",
        "invalid querystring accountid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ]
    },
    "redacts": [],
    "returns": [
      "array"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  },
  "/api/user/subscriptions/upcoming-invoice": {
    "url": "/api/user/subscriptions/upcoming-invoice",
    "verb": "get",
    "auth": false,
    "receives": [],
    "exceptions": {
      "invalid-subscriptionid": [
        "missing querystring subscriptionid",
        "invalid querystring subscriptionid"
      ],
      "invalid-account": [
        "ineligible accessing account"
      ],
      "invalid-subscription": [
        "ineligible querystring subscription"
      ]
    },
    "redacts": [],
    "returns": [
      "object"
    ],
    "configuration": []
  },
  "/api/user/subscriptions/usage-record-summaries": {
    "url": "/api/user/subscriptions/usage-record-summaries",
    "verb": "get",
    "auth": false,
    "receives": [
      "optional querystring starting_after (string)",
      "optional querystring ending_before (string)",
      "optional querystring limit (integer)"
    ],
    "exceptions": {
      "invalid-subscriptionitemid": [
        "missing querystring subscriptionitemid",
        "invalid querystring subscriptionitemid"
      ]
    },
    "redacts": [],
    "returns": [
      "stripe list response"
    ],
    "configuration": [
      "environment PAGE_SIZE"
    ]
  }
}